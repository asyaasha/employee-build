{"id":"../node_modules/@aws-sdk/middleware-signing/build/middleware.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588279417247},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-signing/package.json","includedInParent":true,"mtime":1588279427976},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-signing/build/middleware.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/tslib/tslib.es6.js"},{"name":"@aws-sdk/protocol-http","loc":{"line":4,"column":30},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-signing/build/middleware.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/protocol-http/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nvar isClockSkewed = function (newServerTime, systemClockOffset) {\n    return Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >=\n        300000;\n};\nvar getSkewCorrectedDate = function (systemClockOffset) {\n    return new Date(Date.now() + systemClockOffset);\n};\nfunction awsAuthMiddleware(options) {\n    return function (next) {\n        return function (args) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var signer, _a, output, _b, _c, _d, headers, dateHeader, serverTime;\n                return tslib_1.__generator(this, function (_e) {\n                    switch (_e.label) {\n                        case 0:\n                            if (!protocol_http_1.HttpRequest.isInstance(args.request))\n                                return [2 /*return*/, next(args)];\n                            if (!(typeof options.signer === \"function\")) return [3 /*break*/, 2];\n                            return [4 /*yield*/, options.signer()];\n                        case 1:\n                            _a = _e.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _a = options.signer;\n                            _e.label = 3;\n                        case 3:\n                            signer = _a;\n                            _b = next;\n                            _c = [tslib_1.__assign({}, args)];\n                            _d = {};\n                            return [4 /*yield*/, signer.sign(args.request, {\n                                    signingDate: new Date(Date.now() + options.systemClockOffset)\n                                })];\n                        case 4: return [4 /*yield*/, _b.apply(void 0, [tslib_1.__assign.apply(void 0, _c.concat([(_d.request = _e.sent(), _d)]))])];\n                        case 5:\n                            output = _e.sent();\n                            headers = output.response.headers;\n                            dateHeader = headers && (headers.date || headers.Date);\n                            if (dateHeader) {\n                                serverTime = Date.parse(dateHeader);\n                                if (isClockSkewed(serverTime, options.systemClockOffset)) {\n                                    options.systemClockOffset = serverTime - Date.now();\n                                }\n                            }\n                            return [2 /*return*/, output];\n                    }\n                });\n            });\n        };\n    };\n}\nexports.awsAuthMiddleware = awsAuthMiddleware;\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    step: \"finalizeRequest\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\"\n};\nexports.getAwsAuthPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), exports.awsAuthMiddlewareOptions);\n    }\n}); };\n"},"sourceMaps":{"js":{"version":3,"file":"middleware.js","sourceRoot":"","sources":["../src/middleware.ts"],"names":[],"mappings":";;;AAUA,wDAAqD;AAErD,IAAM,aAAa,GAAG,UAAC,aAAqB,EAAE,iBAAyB;IACrE,OAAA,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC;QAC3E,MAAM;AADN,CACM,CAAC;AAET,IAAM,oBAAoB,GAAG,UAAC,iBAAyB;IACrD,OAAA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,iBAAiB,CAAC;AAAxC,CAAwC,CAAC;AAE3C,SAAgB,iBAAiB,CAC/B,OAA8B;IAE9B,OAAO,UACL,IAAoC;QAEpC,OAAA,UACE,IAAqC;;;;;;4BAErC,IAAI,CAAC,2BAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;gCAAE,sBAAO,IAAI,CAAC,IAAI,CAAC,EAAC;iCAE3D,CAAA,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU,CAAA,EAApC,wBAAoC;4BAChC,qBAAM,OAAO,CAAC,MAAM,EAAE,EAAA;;4BAAtB,KAAA,SAAsB,CAAA;;;4BACtB,KAAA,OAAO,CAAC,MAAM,CAAA;;;4BAHd,MAAM,KAGQ;4BACC,KAAA,IAAI,CAAA;uDACpB,IAAI;;4BACE,qBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCACvC,WAAW,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC;iCAC9D,CAAC,EAAA;gCAJW,qBAAM,6DAEnB,UAAO,GAAE,SAEP,UACF,EAAA;;4BALI,MAAM,GAAG,SAKb;4BAEM,OAAO,GAAK,MAAM,CAAC,QAAe,QAA3B,CAA4B;4BACrC,UAAU,GAAG,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;4BAC7D,IAAI,UAAU,EAAE;gCACR,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gCAC1C,IAAI,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,iBAAiB,CAAC,EAAE;oCACxD,OAAO,CAAC,iBAAiB,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;iCACrD;6BACF;4BAED,sBAAO,MAAM,EAAC;;;;SACf;IAzBD,CAyBC,CAAC;AACN,CAAC;AAhCD,8CAgCC;AAEY,QAAA,wBAAwB,GACN;IAC7B,IAAI,EAAE,mBAAmB;IACzB,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;IAC9B,QAAQ,EAAE,OAAO;IACjB,YAAY,EAAE,iBAAiB;CAChC,CAAC;AAEW,QAAA,gBAAgB,GAAG,UAC9B,OAA8B,IACN,OAAA,CAAC;IACzB,YAAY,EAAE,UAAA,WAAW;QACvB,WAAW,CAAC,aAAa,CACvB,iBAAiB,CAAC,OAAO,CAAC,EAC1B,gCAAwB,CACzB,CAAC;IACJ,CAAC;CACF,CAAC,EAPwB,CAOxB,CAAC","sourcesContent":["import {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeRequestMiddleware,\n  FinalizeHandlerOutput,\n  Pluggable,\n  RelativeLocation,\n  FinalizeRequestHandlerOptions\n} from \"@aws-sdk/types\";\nimport { AwsAuthResolvedConfig } from \"./configurations\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\n\nconst isClockSkewed = (newServerTime: number, systemClockOffset: number) =>\n  Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >=\n  300000;\n\nconst getSkewCorrectedDate = (systemClockOffset: number) =>\n  new Date(Date.now() + systemClockOffset);\n\nexport function awsAuthMiddleware<Input extends object, Output extends object>(\n  options: AwsAuthResolvedConfig\n): FinalizeRequestMiddleware<Input, Output> {\n  return (\n    next: FinalizeHandler<Input, Output>\n  ): FinalizeHandler<Input, Output> =>\n    async function(\n      args: FinalizeHandlerArguments<Input>\n    ): Promise<FinalizeHandlerOutput<Output>> {\n      if (!HttpRequest.isInstance(args.request)) return next(args);\n      const signer =\n        typeof options.signer === \"function\"\n          ? await options.signer()\n          : options.signer;\n      const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n          signingDate: new Date(Date.now() + options.systemClockOffset)\n        })\n      });\n\n      const { headers } = output.response as any;\n      const dateHeader = headers && (headers.date || headers.Date);\n      if (dateHeader) {\n        const serverTime = Date.parse(dateHeader);\n        if (isClockSkewed(serverTime, options.systemClockOffset)) {\n          options.systemClockOffset = serverTime - Date.now();\n        }\n      }\n\n      return output;\n    };\n}\n\nexport const awsAuthMiddlewareOptions: FinalizeRequestHandlerOptions &\n  RelativeLocation<any, any> = {\n  name: \"awsAuthMiddleware\",\n  step: \"finalizeRequest\",\n  tags: [\"SIGNATURE\", \"AWSAUTH\"],\n  relation: \"after\",\n  toMiddleware: \"retryMiddleware\"\n};\n\nexport const getAwsAuthPlugin = (\n  options: AwsAuthResolvedConfig\n): Pluggable<any, any> => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(\n      awsAuthMiddleware(options),\n      awsAuthMiddlewareOptions\n    );\n  }\n});\n"]}},"error":null,"hash":"fdef5a4bbe559762bbb2441c43cd21af","cacheData":{"env":{}}}