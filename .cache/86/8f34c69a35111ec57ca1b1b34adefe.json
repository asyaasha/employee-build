{"id":"../node_modules/@aws-sdk/middleware-bucket-endpoint/build/bucketEndpointMiddleware.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588305991096},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-bucket-endpoint/package.json","includedInParent":true,"mtime":1588306092106},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-bucket-endpoint/build/bucketEndpointMiddleware.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/tslib/tslib.es6.js"},{"name":"./bucketHostname","loc":{"line":4,"column":31},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-bucket-endpoint/build/bucketEndpointMiddleware.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-bucket-endpoint/build/bucketHostname.js"},{"name":"@aws-sdk/protocol-http","loc":{"line":5,"column":30},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-bucket-endpoint/build/bucketEndpointMiddleware.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/protocol-http/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar bucketHostname_1 = require(\"./bucketHostname\");\nvar protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction bucketEndpointMiddleware(options) {\n    var _this = this;\n    return function (next) { return function (args) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var bucketName, replaceBucketInPath, request, _a, hostname, bucketEndpoint;\n        return tslib_1.__generator(this, function (_b) {\n            bucketName = args.input.Bucket;\n            replaceBucketInPath = options.bucketEndpoint;\n            request = args.request;\n            if (protocol_http_1.HttpRequest.isInstance(request)) {\n                if (options.bucketEndpoint) {\n                    request.hostname = bucketName;\n                }\n                else {\n                    _a = bucketHostname_1.bucketHostname({\n                        bucketName: bucketName,\n                        baseHostname: request.hostname,\n                        accelerateEndpoint: options.useAccelerateEndpoint,\n                        dualstackEndpoint: options.useDualstackEndpoint,\n                        pathStyleEndpoint: options.forcePathStyle,\n                        tlsCompatible: request.protocol === \"https:\"\n                    }), hostname = _a.hostname, bucketEndpoint = _a.bucketEndpoint;\n                    request.hostname = hostname;\n                    replaceBucketInPath = bucketEndpoint;\n                }\n                if (replaceBucketInPath) {\n                    request.path = request.path.replace(/^(\\/)?[^\\/]+/, \"\");\n                    if (request.path === \"\") {\n                        request.path = \"/\";\n                    }\n                }\n            }\n            return [2 /*return*/, next(tslib_1.__assign(tslib_1.__assign({}, args), { request: request }))];\n        });\n    }); }; };\n}\nexports.bucketEndpointMiddleware = bucketEndpointMiddleware;\nexports.bucketEndpointMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"BUCKET_ENDPOINT\"],\n    name: \"bucketEndpointMiddleware\",\n    relation: \"before\",\n    toMiddleware: \"hostHeaderMiddleware\"\n};\nexports.getBucketEndpointPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.addRelativeTo(bucketEndpointMiddleware(options), exports.bucketEndpointMiddlewareOptions);\n    }\n}); };\n"},"sourceMaps":{"js":{"version":3,"file":"bucketEndpointMiddleware.js","sourceRoot":"","sources":["../src/bucketEndpointMiddleware.ts"],"names":[],"mappings":";;;AAAA,mDAAkD;AAYlD,wDAAqD;AAErD,SAAgB,wBAAwB,CACtC,OAAqC;IADvC,iBAsCC;IAnCC,OAAO,UACL,IAA+B,IACD,OAAA,UAC9B,IAAgC;;;YAEhB,UAAU,GAAK,IAAI,CAAC,KAAK,OAAf,CAAgB;YACtC,mBAAmB,GAAG,OAAO,CAAC,cAAc,CAAC;YAC7C,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,IAAI,2BAAW,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBACnC,IAAI,OAAO,CAAC,cAAc,EAAE;oBAC1B,OAAO,CAAC,QAAQ,GAAG,UAAU,CAAC;iBAC/B;qBAAM;oBACC,KAA+B,+BAAc,CAAC;wBAClD,UAAU,YAAA;wBACV,YAAY,EAAE,OAAO,CAAC,QAAQ;wBAC9B,kBAAkB,EAAE,OAAO,CAAC,qBAAqB;wBACjD,iBAAiB,EAAE,OAAO,CAAC,oBAAoB;wBAC/C,iBAAiB,EAAE,OAAO,CAAC,cAAc;wBACzC,aAAa,EAAE,OAAO,CAAC,QAAQ,KAAK,QAAQ;qBAC7C,CAAC,EAPM,QAAQ,cAAA,EAAE,cAAc,oBAAA,CAO7B;oBAEH,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBAC5B,mBAAmB,GAAG,cAAc,CAAC;iBACtC;gBAED,IAAI,mBAAmB,EAAE;oBACvB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;oBACxD,IAAI,OAAO,CAAC,IAAI,KAAK,EAAE,EAAE;wBACvB,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;qBACpB;iBACF;aACF;YAED,sBAAO,IAAI,uCAAM,IAAI,KAAE,OAAO,SAAA,IAAG,EAAC;;SACnC,EAhC+B,CAgC/B,CAAC;AACJ,CAAC;AAtCD,4DAsCC;AAEY,QAAA,+BAA+B,GACb;IAC7B,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,CAAC,iBAAiB,CAAC;IACzB,IAAI,EAAE,0BAA0B;IAChC,QAAQ,EAAE,QAAQ;IAClB,YAAY,EAAE,sBAAsB;CACrC,CAAC;AAEW,QAAA,uBAAuB,GAAG,UACrC,OAAqC,IACb,OAAA,CAAC;IACzB,YAAY,EAAE,UAAA,WAAW;QACvB,WAAW,CAAC,aAAa,CACvB,wBAAwB,CAAC,OAAO,CAAC,EACjC,uCAA+B,CAChC,CAAC;IACJ,CAAC;CACF,CAAC,EAPwB,CAOxB,CAAC","sourcesContent":["import { bucketHostname } from \"./bucketHostname\";\nimport { BucketEndpointResolvedConfig } from \"./configurations\";\nimport {\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  BuildMiddleware,\n  MetadataBearer,\n  Pluggable,\n  RelativeLocation\n} from \"@aws-sdk/types\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\n\nexport function bucketEndpointMiddleware(\n  options: BucketEndpointResolvedConfig\n): BuildMiddleware<any, any> {\n  return <Output extends MetadataBearer>(\n    next: BuildHandler<any, Output>\n  ): BuildHandler<any, Output> => async (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    const { Bucket: bucketName } = args.input;\n    let replaceBucketInPath = options.bucketEndpoint;\n    let request = args.request;\n    if (HttpRequest.isInstance(request)) {\n      if (options.bucketEndpoint) {\n        request.hostname = bucketName;\n      } else {\n        const { hostname, bucketEndpoint } = bucketHostname({\n          bucketName,\n          baseHostname: request.hostname,\n          accelerateEndpoint: options.useAccelerateEndpoint,\n          dualstackEndpoint: options.useDualstackEndpoint,\n          pathStyleEndpoint: options.forcePathStyle,\n          tlsCompatible: request.protocol === \"https:\"\n        });\n\n        request.hostname = hostname;\n        replaceBucketInPath = bucketEndpoint;\n      }\n\n      if (replaceBucketInPath) {\n        request.path = request.path.replace(/^(\\/)?[^\\/]+/, \"\");\n        if (request.path === \"\") {\n          request.path = \"/\";\n        }\n      }\n    }\n\n    return next({ ...args, request });\n  };\n}\n\nexport const bucketEndpointMiddlewareOptions: BuildHandlerOptions &\n  RelativeLocation<any, any> = {\n  step: \"build\",\n  tags: [\"BUCKET_ENDPOINT\"],\n  name: \"bucketEndpointMiddleware\",\n  relation: \"before\",\n  toMiddleware: \"hostHeaderMiddleware\"\n};\n\nexport const getBucketEndpointPlugin = (\n  options: BucketEndpointResolvedConfig\n): Pluggable<any, any> => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(\n      bucketEndpointMiddleware(options),\n      bucketEndpointMiddlewareOptions\n    );\n  }\n});\n"]}},"error":null,"hash":"e72190ba54d90fbadde8372a50ffd88b","cacheData":{"env":{}}}