{"id":"../node_modules/@aws-sdk/url-parser-browser/build/index.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588305991096},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/url-parser-browser/package.json","includedInParent":true,"mtime":1588306092102},{"name":"@aws-sdk/querystring-parser","loc":{"line":3,"column":35},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/url-parser-browser/build/index.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/querystring-parser/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nexports.parseUrl = function (url) {\n    var _a = new URL(url), hostname = _a.hostname, pathname = _a.pathname, port = _a.port, protocol = _a.protocol, search = _a.search;\n    var query;\n    if (search) {\n        query = querystring_parser_1.parseQueryString(search);\n    }\n    return {\n        hostname: hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol: protocol,\n        path: pathname,\n        query: query\n    };\n};\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,kEAA+D;AAGlD,QAAA,QAAQ,GAAc,UAAC,GAAW;IACvC,IAAA,iBAA6D,EAA3D,sBAAQ,EAAE,sBAAQ,EAAE,cAAI,EAAE,sBAAQ,EAAE,kBAAuB,CAAC;IAEpE,IAAI,KAAoC,CAAC;IACzC,IAAI,MAAM,EAAE;QACV,KAAK,GAAG,qCAAgB,CAAC,MAAM,CAAC,CAAC;KAClC;IAED,OAAO;QACL,QAAQ,UAAA;QACR,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;QACvC,QAAQ,UAAA;QACR,IAAI,EAAE,QAAQ;QACd,KAAK,OAAA;KACN,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nimport { Endpoint, QueryParameterBag, UrlParser } from \"@aws-sdk/types\";\n\nexport const parseUrl: UrlParser = (url: string): Endpoint => {\n  const { hostname, pathname, port, protocol, search } = new URL(url);\n\n  let query: QueryParameterBag | undefined;\n  if (search) {\n    query = parseQueryString(search);\n  }\n\n  return {\n    hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol,\n    path: pathname,\n    query\n  };\n};\n"]}},"error":null,"hash":"44b64d0d91968715d906a72eac0bb4ae","cacheData":{"env":{}}}