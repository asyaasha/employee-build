{"id":"../node_modules/fast-xml-parser/src/parser.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588218602939},{"name":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/package.json","includedInParent":true,"mtime":1588216999950},{"name":"./node2json","loc":{"line":3,"column":27},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/node2json.js"},{"name":"./xmlstr2xmlnode","loc":{"line":5,"column":26},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/xmlstr2xmlnode.js"},{"name":"./util","loc":{"line":6,"column":29},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/util.js"},{"name":"./validator","loc":{"line":7,"column":26},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/validator.js"},{"name":"../src/nimndata","loc":{"line":21,"column":32},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/nimndata.js"},{"name":"./node2json_str","loc":{"line":24,"column":38},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/node2json_str.js"},{"name":"./json2xml","loc":{"line":26,"column":28},"parent":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/parser.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/fast-xml-parser/src/json2xml.js"}],"generated":{"js":"'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  return nodeToJson.convertToJson(xmlToNodeobj.getTraversalObj(xmlData, options), options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/fast-xml-parser/src/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/fast-xml-parser/src/parser.js":"'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  return nodeToJson.convertToJson(xmlToNodeobj.getTraversalObj(xmlData, options), options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n"},"lineCount":30}},"error":null,"hash":"85873f7af2c54a6f5aec80d1c39eaebc","cacheData":{"env":{}}}