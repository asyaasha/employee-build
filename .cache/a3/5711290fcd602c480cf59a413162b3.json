{"id":"../node_modules/apollo-link-retry/lib/retryFunction.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/node_modules/apollo-link-retry/lib/retryFunction.js.map","includedInParent":true,"mtime":1537004070000},{"name":"/Users/a/Desktop/buildopsTest/node_modules/apollo-link-retry/src/retryFunction.ts","includedInParent":true,"mtime":1527009871000},{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588209350205},{"name":"/Users/a/Desktop/buildopsTest/node_modules/apollo-link-retry/package.json","includedInParent":true,"mtime":1588208102648}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildRetryFunction = buildRetryFunction;\n\nfunction buildRetryFunction(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.max,\n      max = _c === void 0 ? 5 : _c,\n      retryIf = _b.retryIf;\n\n  return function retryFunction(count, operation, error) {\n    if (count >= max) return false;\n    return retryIf ? retryIf(error, operation) : !!error;\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":8,"column":0}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":8,"column":9}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":8,"column":27}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":8,"column":28}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":8,"column":30}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":36,"column":28},"generated":{"line":8,"column":32}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":6}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":8}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":11}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":13}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":18}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":23}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":24}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":27}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":29}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":9,"column":32}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":10,"column":6}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":10,"column":8}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":10,"column":11}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":10,"column":13}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":10,"column":14}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":6}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":9}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":12}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":14}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":19}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":24}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":25}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":28}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":29}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":11,"column":32}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":12,"column":6}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":12,"column":13}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":12,"column":16}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":12,"column":18}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":12,"column":19}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":14,"column":0}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":14,"column":9}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":18},"generated":{"line":14,"column":18}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":14,"column":31}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":32},"generated":{"line":14,"column":32}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":14,"column":37}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":39},"generated":{"line":14,"column":39}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":14,"column":48}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":50},"generated":{"line":14,"column":50}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":14,"column":55}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":55},"generated":{"line":14,"column":57}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":15,"column":0}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":15,"column":8}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":15,"column":13}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":17},"generated":{"line":15,"column":17}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":15,"column":20}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":15,"column":22}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":15,"column":29}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":15,"column":34}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":16,"column":0}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":16,"column":11}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":16,"column":18}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":21},"generated":{"line":16,"column":21}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":16,"column":28}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":16,"column":29}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":16,"column":34}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":36},"generated":{"line":16,"column":36}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":16,"column":45}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":16,"column":46}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":49},"generated":{"line":16,"column":49}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":50},"generated":{"line":16,"column":50}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":51},"generated":{"line":16,"column":51}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":16,"column":56}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":40,"column":3},"generated":{"line":17,"column":0}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":17,"column":3}},{"source":"../src/retryFunction.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../src/retryFunction.ts":"import { Operation } from 'apollo-link';\n\n/**\n * Advanced mode: a function that determines both whether a particular\n * response should be retried.\n */\nexport interface RetryFunction {\n  (count: number, operation: Operation, error: any): boolean | Promise<boolean>;\n}\n\nexport interface RetryFunctionOptions {\n  /**\n   * The max number of times to try a single operation before giving up.\n   *\n   * Note that this INCLUDES the initial request as part of the count.\n   * E.g. maxTries of 1 indicates no retrying should occur.\n   *\n   * Defaults to 5.  Pass Infinity for infinite retries.\n   */\n  max?: number;\n\n  /**\n   * Predicate function that determines whether a particular error should\n   * trigger a retry.\n   *\n   * For example, you may want to not retry 4xx class HTTP errors.\n   *\n   * By default, all errors are retried.\n   */\n  retryIf?: (error: any, operation: Operation) => boolean | Promise<boolean>;\n}\n\nexport function buildRetryFunction({\n  max = 5,\n  retryIf,\n}: RetryFunctionOptions = {}): RetryFunction {\n  return function retryFunction(count, operation, error) {\n    if (count >= max) return false;\n    return retryIf ? retryIf(error, operation) : !!error;\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"588c47cebd4e8a390f08ce05687c8284","cacheData":{"env":{}}}