{"id":"../node_modules/@aws-sdk/middleware-retry/build/retryDecider.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588355748633},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-retry/package.json","includedInParent":true,"mtime":1588306092117},{"name":"./constants","loc":{"line":3,"column":26},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-retry/build/retryDecider.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-retry/build/constants.js"},{"name":"@aws-sdk/service-error-classification","loc":{"line":4,"column":45},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-retry/build/retryDecider.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/service-error-classification/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nexports.defaultRetryDecider = function (error) {\n    if (!error) {\n        return false;\n    }\n    if (error.connectionError) {\n        return true;\n    }\n    if (hasMetadata(error) &&\n        error.$metadata.httpStatusCode &&\n        constants_1.RETRYABLE_STATUS_CODES.has(error.$metadata.httpStatusCode)) {\n        return true;\n    }\n    return (service_error_classification_1.isStillProcessingError(error) ||\n        service_error_classification_1.isThrottlingError(error) ||\n        service_error_classification_1.isClockSkewError(error));\n};\nfunction hasMetadata(error) {\n    return error === null || error === void 0 ? void 0 : error.$metadata;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"retryDecider.js","sourceRoot":"","sources":["../src/retryDecider.ts"],"names":[],"mappings":";;AAAA,yCAAqD;AACrD,sFAI+C;AAGlC,QAAA,mBAAmB,GAAG,UAAC,KAAe;IACjD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,IAAI,KAAK,CAAC,eAAe,EAAE;QACzB,OAAO,IAAI,CAAC;KACb;IAED,IACE,WAAW,CAAC,KAAK,CAAC;QAClB,KAAK,CAAC,SAAS,CAAC,cAAc;QAC9B,kCAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,EAC1D;QACA,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,qDAAsB,CAAC,KAAK,CAAC;QAC7B,gDAAiB,CAAC,KAAK,CAAC;QACxB,+CAAgB,CAAC,KAAK,CAAC,CACxB,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,WAAW,CAAC,KAAU;IAC7B,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAC;AAC1B,CAAC","sourcesContent":["import { RETRYABLE_STATUS_CODES } from \"./constants\";\nimport {\n  isClockSkewError,\n  isStillProcessingError,\n  isThrottlingError\n} from \"@aws-sdk/service-error-classification\";\nimport { MetadataBearer, SdkError } from \"@aws-sdk/types\";\n\nexport const defaultRetryDecider = (error: SdkError) => {\n  if (!error) {\n    return false;\n  }\n\n  if (error.connectionError) {\n    return true;\n  }\n\n  if (\n    hasMetadata(error) &&\n    error.$metadata.httpStatusCode &&\n    RETRYABLE_STATUS_CODES.has(error.$metadata.httpStatusCode)\n  ) {\n    return true;\n  }\n\n  return (\n    isStillProcessingError(error) ||\n    isThrottlingError(error) ||\n    isClockSkewError(error)\n  );\n};\n\nfunction hasMetadata(error: any): error is MetadataBearer {\n  return error?.$metadata;\n}\n"]}},"error":null,"hash":"fd1e0b8a06fd58647f9ae6f3edcd030f","cacheData":{"env":{}}}