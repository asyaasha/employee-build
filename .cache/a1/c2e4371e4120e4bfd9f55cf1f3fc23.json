{"id":"../node_modules/@aws-sdk/middleware-ssec/build/index.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588209350205},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-ssec/package.json","includedInParent":true,"mtime":1588208103128},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-ssec/build/index.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/tslib/tslib.es6.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nfunction ssecMiddleware(options) {\n    var _this = this;\n    return function (next) { return function (args) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;\n        var e_1, _e, _f;\n        return tslib_1.__generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    input = tslib_1.__assign({}, args.input);\n                    properties = [\n                        {\n                            target: \"SSECustomerKey\",\n                            hash: \"SSECustomerKeyMD5\"\n                        },\n                        {\n                            target: \"CopySourceSSECustomerKey\",\n                            hash: \"CopySourceSSECustomerKeyMD5\"\n                        }\n                    ];\n                    _g.label = 1;\n                case 1:\n                    _g.trys.push([1, 6, 7, 8]);\n                    properties_1 = tslib_1.__values(properties), properties_1_1 = properties_1.next();\n                    _g.label = 2;\n                case 2:\n                    if (!!properties_1_1.done) return [3 /*break*/, 5];\n                    prop = properties_1_1.value;\n                    value = input[prop.target];\n                    if (!value) return [3 /*break*/, 4];\n                    valueView = ArrayBuffer.isView(value)\n                        ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                        : typeof value === \"string\"\n                            ? options.utf8Decoder(value)\n                            : new Uint8Array(value);\n                    encoded = options.base64Encoder(valueView);\n                    hash = new options.md5();\n                    hash.update(valueView);\n                    _a = [tslib_1.__assign({}, input)];\n                    _f = {}, _f[prop.target] = encoded;\n                    _b = prop.hash;\n                    _d = (_c = options).base64Encoder;\n                    return [4 /*yield*/, hash.digest()];\n                case 3:\n                    input = tslib_1.__assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));\n                    _g.label = 4;\n                case 4:\n                    properties_1_1 = properties_1.next();\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 8];\n                case 6:\n                    e_1_1 = _g.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 8];\n                case 7:\n                    try {\n                        if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 8: return [2 /*return*/, next(tslib_1.__assign(tslib_1.__assign({}, args), { input: input }))];\n            }\n        });\n    }); }; };\n}\nexports.ssecMiddleware = ssecMiddleware;\nexports.ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"]\n};\nexports.getSsecPlugin = function (config) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(ssecMiddleware(config), exports.ssecMiddlewareOptions);\n    }\n}); };\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAYA,SAAgB,cAAc,CAC5B,OAAqC;IADvC,iBA4CC;IAzCC,OAAO,UACL,IAAoC,IACD,OAAA,UACnC,IAAqC;;;;;;oBAEjC,KAAK,wBAAQ,IAAI,CAAC,KAAK,CAAE,CAAC;oBACxB,UAAU,GAAG;wBACjB;4BACE,MAAM,EAAE,gBAAgB;4BACxB,IAAI,EAAE,mBAAmB;yBAC1B;wBACD;4BACE,MAAM,EAAE,0BAA0B;4BAClC,IAAI,EAAE,6BAA6B;yBACpC;qBACF,CAAC;;;;oBAEiB,eAAA,iBAAA,UAAU,CAAA;;;;oBAAlB,IAAI;oBACP,KAAK,GAA4B,KAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC9D,KAAK,EAAL,wBAAK;oBACD,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;wBACzC,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC;wBAClE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ;4BAC3B,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC;4BAC5B,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;oBACpB,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAC3C,IAAI,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;+CAEjB,KAAa;gCAChB,IAAI,CAAC,MAAM,IAAG,OAAO;oBACrB,KAAA,IAAI,CAAC,IAAI,CAAA;oBAAG,KAAA,CAAA,KAAA,OAAO,CAAA,CAAC,aAAa,CAAA;oBAAC,qBAAM,IAAI,CAAC,MAAM,EAAE,EAAA;;oBAHxD,KAAK,uDAGU,cAAsB,SAAmB,EAAC,QACxD,CAAC;;;;;;;;;;;;;;;;wBAIN,sBAAO,IAAI,uCACN,IAAI,KACP,KAAK,OAAA,IACL,EAAC;;;SACJ,EAtCoC,CAsCpC,CAAC;AACJ,CAAC;AA5CD,wCA4CC;AAEY,QAAA,qBAAqB,GAA6B;IAC7D,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,YAAY;IAClB,IAAI,EAAE,CAAC,KAAK,CAAC;CACd,CAAC;AAEW,QAAA,aAAa,GAAG,UAC3B,MAAoC,IACZ,OAAA,CAAC;IACzB,YAAY,EAAE,UAAA,WAAW;QACvB,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,6BAAqB,CAAC,CAAC;IACjE,CAAC;CACF,CAAC,EAJwB,CAIxB,CAAC","sourcesContent":["import {\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n  InitializeMiddleware,\n  SourceData\n} from \"@aws-sdk/types\";\nimport { ResolvedSsecMiddlewareConfig } from \"./configuration\";\n\nexport function ssecMiddleware(\n  options: ResolvedSsecMiddlewareConfig\n): InitializeMiddleware<any, any> {\n  return <Output extends MetadataBearer>(\n    next: InitializeHandler<any, Output>\n  ): InitializeHandler<any, Output> => async (\n    args: InitializeHandlerArguments<any>\n  ): Promise<InitializeHandlerOutput<Output>> => {\n    let input = { ...args.input };\n    const properties = [\n      {\n        target: \"SSECustomerKey\",\n        hash: \"SSECustomerKeyMD5\"\n      },\n      {\n        target: \"CopySourceSSECustomerKey\",\n        hash: \"CopySourceSSECustomerKeyMD5\"\n      }\n    ];\n\n    for (const prop of properties) {\n      const value: SourceData | undefined = (input as any)[prop.target];\n      if (value) {\n        const valueView = ArrayBuffer.isView(value)\n          ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n          : typeof value === \"string\"\n          ? options.utf8Decoder(value)\n          : new Uint8Array(value);\n        const encoded = options.base64Encoder(valueView);\n        const hash = new options.md5();\n        hash.update(valueView);\n        input = {\n          ...(input as any),\n          [prop.target]: encoded,\n          [prop.hash]: options.base64Encoder(await hash.digest())\n        };\n      }\n    }\n\n    return next({\n      ...args,\n      input\n    });\n  };\n}\n\nexport const ssecMiddlewareOptions: InitializeHandlerOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"]\n};\n\nexport const getSsecPlugin = (\n  config: ResolvedSsecMiddlewareConfig\n): Pluggable<any, any> => ({\n  applyToStack: clientStack => {\n    clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n  }\n});\n"]}},"error":null,"hash":"d3b01dd39401ece2199eab69ce2bfa06","cacheData":{"env":{}}}