{"id":"../node_modules/aws-appsync/lib/deltaSync.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588355748633},{"name":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/package.json","includedInParent":true,"mtime":1588306091648},{"name":"apollo-cache-inmemory","loc":{"line":68,"column":38},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/apollo-cache-inmemory/lib/index.js"},{"name":"./cache/offline-cache","loc":{"line":69,"column":30},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/cache/offline-cache.js"},{"name":"apollo-utilities","loc":{"line":70,"column":33},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/apollo-utilities/lib/bundle.esm.js"},{"name":"./utils","loc":{"line":71,"column":22},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/utils/index.js"},{"name":"apollo-link","loc":{"line":72,"column":28},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/apollo-link/lib/index.js"},{"name":"./link/retry-link","loc":{"line":73,"column":27},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/link/retry-link.js"},{"name":"graphql","loc":{"line":74,"column":24},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/node_modules/graphql/module/index.js"},{"name":"./helpers/offline","loc":{"line":75,"column":24},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/helpers/offline.js"},{"name":"./link/offline-link","loc":{"line":76,"column":29},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/link/offline-link.js"},{"name":"aws-appsync-subscription-link","loc":{"line":77,"column":46},"parent":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync/lib/deltaSync.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/aws-appsync-subscription-link/lib/index.js"}],"generated":{"js":"var global = arguments[3];\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_cache_inmemory_1 = require(\"apollo-cache-inmemory\");\nvar offline_cache_1 = require(\"./cache/offline-cache\");\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nvar utils_1 = require(\"./utils\");\nvar apollo_link_1 = require(\"apollo-link\");\nvar retry_link_1 = require(\"./link/retry-link\");\nvar graphql_1 = require(\"graphql\");\nvar offline_1 = require(\"./helpers/offline\");\nvar offline_link_1 = require(\"./link/offline-link\");\nvar aws_appsync_subscription_link_1 = require(\"aws-appsync-subscription-link\");\nvar logger = utils_1.rootLogger.extend('deltasync');\nexports.DELTASYNC_KEY = 'deltaSync';\n//#endregion\n//#region Constants\nvar actions = {\n    ENQUEUE: 'DELTASYNC_ENQUEUE_RECONNECT',\n    UPDATE_LASTSYNC: 'DELTASYNC_UPDATE_LASTSYNC',\n};\nvar DEFAULT_UPPER_BOUND_TIME_MS = 24 * 60 * 60 * 1000;\nvar MIN_UPPER_BOUND_TIME_MS = 2 * 1000;\nvar BUFFER_MILLISECONDS = 2000;\n//#endregion\n//#region helpers\nvar subscriptionMessagesProcessorCreator = function (proxy, updateFunction) {\n    var buffer = [];\n    var ready = false;\n    var wrappedUpdateFunction = function (proxy, record) { return apollo_utilities_1.tryFunctionOrLogError(function () { return updateFunction(proxy, record); }); };\n    var processor = {\n        enqueue: function (record) {\n            if (ready) {\n                wrappedUpdateFunction(proxy, record);\n                return;\n            }\n            buffer.push(record);\n        },\n        ready: function () {\n            if (ready) {\n                return;\n            }\n            buffer.forEach(function (record) { return wrappedUpdateFunction(proxy, record); });\n            buffer = [];\n            ready = true;\n        },\n        close: function () {\n            buffer = [];\n            ready = true;\n        }\n    };\n    return processor;\n};\nexports.hashForOptions = function (options) {\n    var _a = options.baseQuery, _b = _a === void 0 ? {} : _a, _c = _b.query, baseQueryQuery = _c === void 0 ? null : _c, _d = _b.variables, baseQueryVariables = _d === void 0 ? {} : _d, _e = options.subscriptionQuery, _f = _e === void 0 ? {} : _e, _g = _f.query, subscriptionQueryQuery = _g === void 0 ? null : _g, _h = _f.variables, subscriptionQueryVariables = _h === void 0 ? {} : _h, _j = options.deltaQuery, _k = _j === void 0 ? {} : _j, _l = _k.query, deltaQueryQuery = _l === void 0 ? null : _l, _m = _k.variables, deltaQueryVariables = _m === void 0 ? {} : _m;\n    var baseQuery = baseQueryQuery ? {\n        query: graphql_1.print(baseQueryQuery),\n        variables: baseQueryVariables,\n    } : {};\n    var subscriptionQuery = subscriptionQueryQuery ? {\n        query: graphql_1.print(subscriptionQueryQuery),\n        variables: subscriptionQueryVariables,\n    } : {};\n    var deltaQuery = deltaQueryQuery ? {\n        query: graphql_1.print(deltaQueryQuery),\n        variables: deltaQueryVariables,\n    } : {};\n    return utils_1.hash(JSON.stringify({\n        baseQuery: baseQuery,\n        subscriptionQuery: subscriptionQuery,\n        deltaQuery: deltaQuery,\n    }));\n};\n//#endregion\n//#region Redux\nvar effect = function (store, client, effect, _action, _offlineCallback, offlineStatusChangeObservable) { return __awaiter(void 0, void 0, void 0, function () {\n    var options, _a, baseQuery, subscriptionQuery, deltaQuery, observer, _b, callback, upperBoundTimeMS, hash, itemInHash, _c, lastSyncTimestamp, _d, baseLastSyncTimestamp, networkStatusSubscription, subscription, baseQueryTimeoutId, subscriptionProcessor, unsubscribeAll, enqueueAgain, handle, STOP_CACHE_RECORDING, recorderCacheWrites, cacheProxy, error_2, _e, _f, _g, idsMap_1, cacheSnapshot, enquededMutations, subsControlLogger_1, baseRefreshIntervalInSeconds, skipBaseQuery, query, update_1, variables, result_1, _h, cacheSnapshot_1, data, query, update_2, variables, result_2, dataStore_1, enqueuedActionsFilter_1, baseQueryTimeout, error_1;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                options = effect.options, _a = effect.options, baseQuery = _a.baseQuery, subscriptionQuery = _a.subscriptionQuery, deltaQuery = _a.deltaQuery, observer = effect.observer, _b = effect.callback, callback = _b === void 0 ? function () { } : _b;\n                if (!observer || typeof observer.next !== 'function' || observer.closed) {\n                    // If we don't have an observer, we complete this effect (this means the app was closed/opened and a completely \n                    // new deltaSync will happen)\n                    return [2 /*return*/];\n                }\n                upperBoundTimeMS = DEFAULT_UPPER_BOUND_TIME_MS;\n                hash = exports.hashForOptions(options);\n                itemInHash = store.getState()[offline_cache_1.METADATA_KEY][exports.DELTASYNC_KEY].metadata[hash];\n                _c = options.lastSyncTimestamp, lastSyncTimestamp = _c === void 0 ? itemInHash.lastSyncTimestamp : _c, _d = options.baseLastSyncTimestamp, baseLastSyncTimestamp = _d === void 0 ? itemInHash.baseLastSyncTimestamp : _d;\n                unsubscribeAll = function () {\n                    logger('Unsubscribing');\n                    if (networkStatusSubscription)\n                        networkStatusSubscription.unsubscribe();\n                    if (subscription)\n                        subscription.unsubscribe();\n                    if (baseQueryTimeoutId)\n                        clearTimeout(baseQueryTimeoutId);\n                    if (subscriptionProcessor)\n                        subscriptionProcessor.close();\n                };\n                enqueueAgain = function () {\n                    unsubscribeAll();\n                    logger('Re-queuing', { baseLastSyncTimestamp: baseLastSyncTimestamp, lastSyncTimestamp: lastSyncTimestamp });\n                    exports.boundEnqueueDeltaSync(store, __assign(__assign({}, options), { lastSyncTimestamp: lastSyncTimestamp, baseLastSyncTimestamp: baseLastSyncTimestamp }), observer, callback);\n                };\n                if (typeof callback === 'function') {\n                    handle = new apollo_link_1.Observable(function () { return function () { return unsubscribeAll(); }; }).subscribe({ next: function () { } });\n                    callback(handle);\n                }\n                networkStatusSubscription = new apollo_link_1.Observable(function (obs) {\n                    var handle = offlineStatusChangeObservable.subscribe({\n                        next: function (_a) {\n                            var online = _a.online;\n                            if (!online) {\n                                obs.next(null);\n                                obs.complete();\n                            }\n                        },\n                        complete: function () { return obs.complete(); },\n                    });\n                    return function () { return handle.unsubscribe(); };\n                }).subscribe({\n                    next: function () {\n                        enqueueAgain();\n                    }\n                });\n                STOP_CACHE_RECORDING = typeof Symbol !== 'undefined' ? Symbol('stopCacheRecording') : '@@stopCacheRecording';\n                recorderCacheWrites = [];\n                cacheProxy = new Proxy(client.cache, {\n                    get: function (target, name, receiver) {\n                        switch (name) {\n                            case 'write':\n                                return function (options) {\n                                    if (!receiver[STOP_CACHE_RECORDING]) {\n                                        recorderCacheWrites.push(options);\n                                    }\n                                    return target[name](options);\n                                };\n                        }\n                        return target[name];\n                    }\n                });\n                subscriptionProcessor = subscriptionMessagesProcessorCreator(cacheProxy, function (proxy, record) {\n                    var update = options.subscriptionQuery.update;\n                    if (typeof update === 'function') {\n                        update(proxy, record);\n                        client.queryManager.broadcastQueries();\n                    }\n                });\n                _j.label = 1;\n            case 1:\n                _j.trys.push([1, 8, , 9]);\n                _e = store.getState(), _f = offline_cache_1.METADATA_KEY, _g = _e[_f], idsMap_1 = _g.idsMap, cacheSnapshot = _g.snapshot.cache, enquededMutations = _e.offline.outbox;\n                subsControlLogger_1 = logger.extend('subsc-control');\n                return [4 /*yield*/, new Promise(function (resolve) {\n                        var _a;\n                        if (subscriptionQuery && subscriptionQuery.query) {\n                            var query = subscriptionQuery.query, variables = subscriptionQuery.variables;\n                            subscription = client.subscribe({\n                                query: query,\n                                variables: __assign(__assign({}, variables), (_a = {}, _a[retry_link_1.SKIP_RETRY_KEY] = true, _a[aws_appsync_subscription_link_1.CONTROL_EVENTS_KEY] = true, _a)),\n                            }).filter(function (data) {\n                                var _a = data.extensions, _b = _a === void 0 ? {} : _a, _c = _b.controlMsgType, controlMsgType = _c === void 0 ? undefined : _c, _d = _b.controlMsgInfo, controlMsgInfo = _d === void 0 ? undefined : _d;\n                                var isControlMsg = typeof controlMsgType !== 'undefined';\n                                if (controlMsgType) {\n                                    subsControlLogger_1(controlMsgType, controlMsgInfo);\n                                    if (controlMsgType === 'CONNECTED') {\n                                        resolve();\n                                    }\n                                }\n                                return !isControlMsg;\n                            }).subscribe({\n                                next: function (data) {\n                                    subscriptionProcessor.enqueue(data);\n                                },\n                                error: function (err) {\n                                    resolve();\n                                    error_2 = err;\n                                    unsubscribeAll();\n                                    if (apollo_utilities_1.graphQLResultHasError(err) || err.graphQLErrors) {\n                                        // send error to observable, unsubscribe all, do not enqueue\n                                        observer.error(err);\n                                        return;\n                                    }\n                                    enqueueAgain();\n                                }\n                            });\n                        }\n                        else {\n                            resolve();\n                        }\n                    })];\n            case 2:\n                _j.sent();\n                if (error_2) {\n                    throw error_2;\n                }\n                baseRefreshIntervalInSeconds = (baseQuery || { baseRefreshIntervalInSeconds: undefined }).baseRefreshIntervalInSeconds;\n                upperBoundTimeMS = baseRefreshIntervalInSeconds ? baseRefreshIntervalInSeconds * 1000 : DEFAULT_UPPER_BOUND_TIME_MS;\n                skipBaseQuery = !(baseQuery && baseQuery.query) || (baseLastSyncTimestamp\n                    ? Date.now() - baseLastSyncTimestamp < upperBoundTimeMS\n                    : itemInHash.baseLastSyncTimestamp && Date.now() - itemInHash.baseLastSyncTimestamp < upperBoundTimeMS);\n                if (!(baseQuery && baseQuery.query)) return [3 /*break*/, 5];\n                query = baseQuery.query, update_1 = baseQuery.update, variables = baseQuery.variables;\n                logger((skipBaseQuery ? 'Skipping' : 'Running') + \" base query\", { baseLastSyncTimestamp: baseLastSyncTimestamp, itemInHash: itemInHash });\n                if (!!skipBaseQuery) return [3 /*break*/, 4];\n                return [4 /*yield*/, client.query({\n                        fetchPolicy: 'no-cache',\n                        query: query,\n                        variables: variables,\n                    })];\n            case 3:\n                result_1 = _j.sent();\n                cacheProxy.writeQuery({ query: query, variables: variables, data: result_1.data });\n                if (typeof update_1 === 'function') {\n                    apollo_utilities_1.tryFunctionOrLogError(function () {\n                        update_1(cacheProxy, result_1);\n                    });\n                }\n                baseLastSyncTimestamp = Date.now() - BUFFER_MILLISECONDS;\n                boundUpdateLastSync(store, { hash: hash, baseLastSyncTimestamp: baseLastSyncTimestamp });\n                return [3 /*break*/, 5];\n            case 4:\n                try {\n                    if (enquededMutations.length === 1) {\n                        offline_link_1.boundSaveSnapshot(store, client.cache);\n                    }\n                    _h = offline_cache_1.METADATA_KEY, cacheSnapshot_1 = store.getState()[_h].snapshot.cache;\n                    data = cacheProxy.storeReader.readQueryFromStore({\n                        store: apollo_cache_inmemory_1.defaultNormalizedCacheFactory(cacheSnapshot_1),\n                        query: apollo_utilities_1.addTypenameToDocument(query),\n                        variables: variables,\n                    });\n                    cacheProxy.writeQuery({ query: query, variables: variables, data: data });\n                }\n                catch (error) {\n                    logger('Error reading/writting baseQuery from store', error);\n                }\n                _j.label = 5;\n            case 5:\n                //#endregion\n                //#region Delta query\n                if (deltaQuery && deltaQuery.query && !skipBaseQuery) {\n                    logger('Skipping deltaQuery');\n                }\n                if (!(deltaQuery && deltaQuery.query && skipBaseQuery)) return [3 /*break*/, 7];\n                query = deltaQuery.query, update_2 = deltaQuery.update, variables = deltaQuery.variables;\n                logger('Running deltaQuery', { lastSyncTimestamp: lastSyncTimestamp, baseLastSyncTimestamp: baseLastSyncTimestamp });\n                return [4 /*yield*/, client.query({\n                        fetchPolicy: 'no-cache',\n                        query: query,\n                        variables: __assign(__assign({}, variables), { lastSync: Math.floor((lastSyncTimestamp || baseLastSyncTimestamp) / 1000) || 0 }),\n                    })];\n            case 6:\n                result_2 = _j.sent();\n                if (typeof update_2 === 'function') {\n                    apollo_utilities_1.tryFunctionOrLogError(function () {\n                        update_2(cacheProxy, result_2);\n                    });\n                }\n                lastSyncTimestamp = Date.now() - BUFFER_MILLISECONDS;\n                boundUpdateLastSync(store, { hash: hash, lastSyncTimestamp: lastSyncTimestamp });\n                _j.label = 7;\n            case 7:\n                //#endregion\n                if (error_2) {\n                    throw error_2;\n                }\n                // process subscription messages\n                subscriptionProcessor.ready();\n                cacheProxy[STOP_CACHE_RECORDING] = true;\n                if (enquededMutations.length === 1) {\n                    offline_link_1.boundSaveSnapshot(store, client.cache);\n                }\n                else {\n                    // Restore from cache snapshot\n                    client.cache.restore(cacheSnapshot);\n                }\n                recorderCacheWrites.forEach(client.cache.write.bind(client.cache));\n                offline_link_1.boundSaveSnapshot(store, client.cache);\n                client.initQueryManager();\n                dataStore_1 = client.queryManager.dataStore;\n                enqueuedActionsFilter_1 = [offline_link_1.offlineEffectConfig.enqueueAction];\n                enquededMutations\n                    .filter(function (_a) {\n                    var type = _a.type;\n                    return enqueuedActionsFilter_1.indexOf(type) > -1;\n                })\n                    .forEach(function (_a) {\n                    var effect = _a.meta.offline.effect;\n                    var _b = effect, _c = _b.operation, _d = _c === void 0 ? {} : _c, _e = _d.variables, variables = _e === void 0 ? {} : _e, _f = _d.query, document = _f === void 0 ? null : _f, update = _b.update, origOptimisticResponse = _b.optimisticResponse;\n                    if (typeof update !== 'function') {\n                        return;\n                    }\n                    var optimisticResponse = offline_link_1.replaceUsingMap(__assign({}, origOptimisticResponse), idsMap_1);\n                    var result = { data: optimisticResponse };\n                    dataStore_1.markMutationResult({\n                        mutationId: null,\n                        result: result,\n                        document: document,\n                        variables: variables,\n                        updateQueries: {},\n                        update: update\n                    });\n                });\n                client.queryManager.broadcastQueries();\n                if (baseQuery && baseQuery.query) {\n                    baseQueryTimeout = Math.max(upperBoundTimeMS - (Date.now() - baseLastSyncTimestamp), MIN_UPPER_BOUND_TIME_MS);\n                    logger(\"Re-running in \" + baseQueryTimeout / 1000 / 60 + \" minutes\");\n                    baseQueryTimeoutId = global.setTimeout(function () { return enqueueAgain(); }, baseQueryTimeout);\n                }\n                return [3 /*break*/, 9];\n            case 8:\n                error_1 = _j.sent();\n                unsubscribeAll();\n                throw error_1;\n            case 9: return [2 /*return*/];\n        }\n    });\n}); };\nvar discard = function (_callback, error, action, retries) {\n    var effect = action.meta.offline.effect;\n    var observer = effect.observer;\n    if (observer && observer.error && !observer.closed) {\n        observer.error(error);\n    }\n    return true;\n};\nvar reducer = function () { return function (state, action) {\n    var _a;\n    switch (action.type) {\n        case actions.UPDATE_LASTSYNC:\n            logger(action.type, action.payload);\n            return lastSyncReducer(state, action);\n        case actions.ENQUEUE:\n            logger(action.type, action.meta.offline.effect.options);\n            return metadataReducer(state, action);\n        default:\n            var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = __assign({ metadata: {} }, state.deltaSync), _a));\n            return newState;\n    }\n}; };\nvar lastSyncReducer = function (state, action) {\n    var _a, _b;\n    var _c = action.payload, lastSyncTimestamp = _c.lastSyncTimestamp, hash = _c.hash, baseLastSyncTimestamp = _c.baseLastSyncTimestamp;\n    var _d = state[exports.DELTASYNC_KEY], metadata = _d.metadata, deltaSync = __rest(_d, [\"metadata\"]);\n    var _e = hash, hashMetadata = metadata[_e], otherHashes = __rest(metadata, [typeof _e === \"symbol\" ? _e : _e + \"\"]);\n    var newMetadata = {\n        baseLastSyncTimestamp: baseLastSyncTimestamp || hashMetadata.baseLastSyncTimestamp,\n        lastSyncTimestamp: lastSyncTimestamp,\n    };\n    var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = __assign(__assign({}, deltaSync), { metadata: __assign(__assign({}, otherHashes), (_b = {}, _b[hash] = newMetadata, _b)) }), _a));\n    return newState;\n};\nvar metadataReducer = function (state, action) {\n    var _a, _b;\n    var effect = action.meta.offline.effect;\n    var options = effect.options;\n    var metadata = state[exports.DELTASYNC_KEY].metadata;\n    var hash = exports.hashForOptions(options);\n    var hashMetadata = metadata[hash];\n    var _c = hashMetadata || {}, _d = _c.lastSyncTimestamp, lastSyncTimestamp = _d === void 0 ? options.lastSyncTimestamp : _d, _e = _c.baseLastSyncTimestamp, baseLastSyncTimestamp = _e === void 0 ? options.baseLastSyncTimestamp : _e;\n    var newMetadata = {\n        lastSyncTimestamp: lastSyncTimestamp,\n        baseLastSyncTimestamp: options.baseLastSyncTimestamp === null ? null : baseLastSyncTimestamp,\n    };\n    var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = {\n        metadata: __assign(__assign({}, metadata), (_b = {}, _b[hash] = newMetadata, _b))\n    }, _a));\n    return newState;\n};\nexports.boundEnqueueDeltaSync = function (store, options, observer, callback) {\n    var effect = { options: options, observer: observer, callback: callback };\n    store.dispatch({\n        type: exports.offlineEffectConfig.enqueueAction,\n        meta: {\n            offline: {\n                effect: effect\n            },\n        }\n    });\n};\nvar boundUpdateLastSync = function (store, _a) {\n    var hash = _a.hash, lastSyncTimestamp = _a.lastSyncTimestamp, baseLastSyncTimestamp = _a.baseLastSyncTimestamp;\n    var action = {\n        type: actions.UPDATE_LASTSYNC,\n        payload: {\n            hash: hash,\n            lastSyncTimestamp: lastSyncTimestamp,\n            baseLastSyncTimestamp: baseLastSyncTimestamp,\n        }\n    };\n    store.dispatch(action);\n};\n//#endregion\n//#region Builder\nexports.buildSync = function (typename, options, idField) {\n    if (idField === void 0) { idField = 'id'; }\n    var baseQuery = options.baseQuery, subscriptionQuery = options.subscriptionQuery, deltaQuery = options.deltaQuery, _a = options.cacheUpdates, cacheUpdates = _a === void 0 ? function () { return []; } : _a;\n    var loggerHelper = logger.extend('helper');\n    var result = {\n        baseQuery: __assign(__assign({}, baseQuery), (baseQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                var opFieldName = utils_1.getOperationFieldName(baseQuery.query);\n                var _b = opFieldName, result = data[_b];\n                writeCacheUpdates(loggerHelper, cache, result, cacheUpdates);\n            }\n        })),\n        subscriptionQuery: __assign(__assign({}, subscriptionQuery), (subscriptionQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                updateBaseWithDelta(loggerHelper, baseQuery, subscriptionQuery, cache, data, cacheUpdates, typename, idField);\n            }\n        })),\n        deltaQuery: __assign(__assign({}, deltaQuery), (deltaQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                updateBaseWithDelta(loggerHelper, baseQuery, deltaQuery, cache, data, cacheUpdates, typename, idField);\n            }\n        })),\n    };\n    loggerHelper('buildSync options', result);\n    return result;\n};\nvar writeCacheUpdates = function (logger, cache, result, cacheUpdates) {\n    if (cacheUpdates === void 0) { cacheUpdates = function () { return []; }; }\n    var cacheUpdatesLogger = logger.extend('cacheUpdates');\n    cacheUpdatesLogger('writeCacheUpdates');\n    result.forEach(function (item) { return cacheUpdates(item).forEach(function (_a) {\n        var _b;\n        var query = _a.query, variables = _a.variables;\n        var opFieldName = utils_1.getOperationFieldName(query);\n        var data = (_b = {}, _b[opFieldName] = item, _b);\n        cacheUpdatesLogger(\"Writing \" + opFieldName, { variables: variables, data: data });\n        cache.writeQuery({ query: query, variables: variables, data: data });\n    }); });\n};\nvar deltaRecordsProcessor = function (logger, deltaOperationName, deltaRecords, baseResult, typename, idField) {\n    var opType = offline_1.getOpTypeFromOperationName(deltaOperationName);\n    logger({ deltaOperationName: deltaOperationName, opType: opType, deltaRecords: deltaRecords });\n    if (!deltaRecords.length) {\n        return baseResult;\n    }\n    var result = __spreadArrays(baseResult);\n    deltaRecords.forEach(function (deltaRecord) {\n        var incomingRecord = __assign(__assign({}, deltaRecord), { __typename: typename });\n        var isRemove = opType === offline_1.CacheOperationTypes.REMOVE || incomingRecord.aws_ds === 'DELETE';\n        var updater = offline_1.getUpdater(opType === offline_1.CacheOperationTypes.AUTO && !isRemove\n            ? offline_1.CacheOperationTypes.ADD\n            : (isRemove ? offline_1.CacheOperationTypes.REMOVE : opType), idField);\n        logger({ incomingRecord: incomingRecord, isRemove: isRemove });\n        result = updater(__spreadArrays(result), incomingRecord);\n    });\n    return result;\n};\nvar updateBaseWithDelta = function (logger, baseQuery, otherQuery, cache, data, cacheUpdates, typename, idField) {\n    var _a;\n    if (cacheUpdates === void 0) { cacheUpdates = function () { return []; }; }\n    if (idField === void 0) { idField = 'id'; }\n    var updateLogger = logger.extend('update');\n    var opDefinition = apollo_utilities_1.getMainDefinition(otherQuery.query);\n    var _b = opDefinition.selectionSet.selections[0], opName = _b.name.value, opAliasNode = _b.alias;\n    var _c = (opAliasNode || {}).value, opAlias = _c === void 0 ? null : _c;\n    var _d = opDefinition, kind = _d.kind, graphqlOperation = _d.operation;\n    var isSubscription = kind === 'OperationDefinition' && graphqlOperation === 'subscription';\n    var deltaOperationName = (isSubscription ? Object.keys(data) : [opAlias || opName])[0];\n    var _e = deltaOperationName, records = data[_e];\n    var deltaRecords = [].concat(records);\n    if (!baseQuery || !baseQuery.query) {\n        updateLogger('No baseQuery provided');\n    }\n    else {\n        var query = baseQuery.query, variables = baseQuery.variables;\n        var operationName = utils_1.getOperationFieldName(query);\n        var _f = operationName, baseResult = cache.readQuery({ query: query, variables: variables })[_f];\n        if (!Array.isArray(baseResult)) {\n            throw new Error('Result of baseQuery is not an array');\n        }\n        var result = deltaRecordsProcessor(updateLogger, deltaOperationName, deltaRecords, baseResult, typename, idField);\n        if (result !== baseResult) {\n            cache.writeQuery({ query: query, data: (_a = {}, _a[operationName] = result, _a) });\n        }\n    }\n    writeCacheUpdates(updateLogger, cache, deltaRecords, cacheUpdates);\n};\n//#endregion\nexports.offlineEffectConfig = {\n    enqueueAction: actions.ENQUEUE,\n    effect: effect,\n    discard: discard,\n    reducer: reducer,\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/aws-appsync/lib/deltaSync.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}}],"sources":{"../node_modules/aws-appsync/lib/deltaSync.js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_cache_inmemory_1 = require(\"apollo-cache-inmemory\");\nvar offline_cache_1 = require(\"./cache/offline-cache\");\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nvar utils_1 = require(\"./utils\");\nvar apollo_link_1 = require(\"apollo-link\");\nvar retry_link_1 = require(\"./link/retry-link\");\nvar graphql_1 = require(\"graphql\");\nvar offline_1 = require(\"./helpers/offline\");\nvar offline_link_1 = require(\"./link/offline-link\");\nvar aws_appsync_subscription_link_1 = require(\"aws-appsync-subscription-link\");\nvar logger = utils_1.rootLogger.extend('deltasync');\nexports.DELTASYNC_KEY = 'deltaSync';\n//#endregion\n//#region Constants\nvar actions = {\n    ENQUEUE: 'DELTASYNC_ENQUEUE_RECONNECT',\n    UPDATE_LASTSYNC: 'DELTASYNC_UPDATE_LASTSYNC',\n};\nvar DEFAULT_UPPER_BOUND_TIME_MS = 24 * 60 * 60 * 1000;\nvar MIN_UPPER_BOUND_TIME_MS = 2 * 1000;\nvar BUFFER_MILLISECONDS = 2000;\n//#endregion\n//#region helpers\nvar subscriptionMessagesProcessorCreator = function (proxy, updateFunction) {\n    var buffer = [];\n    var ready = false;\n    var wrappedUpdateFunction = function (proxy, record) { return apollo_utilities_1.tryFunctionOrLogError(function () { return updateFunction(proxy, record); }); };\n    var processor = {\n        enqueue: function (record) {\n            if (ready) {\n                wrappedUpdateFunction(proxy, record);\n                return;\n            }\n            buffer.push(record);\n        },\n        ready: function () {\n            if (ready) {\n                return;\n            }\n            buffer.forEach(function (record) { return wrappedUpdateFunction(proxy, record); });\n            buffer = [];\n            ready = true;\n        },\n        close: function () {\n            buffer = [];\n            ready = true;\n        }\n    };\n    return processor;\n};\nexports.hashForOptions = function (options) {\n    var _a = options.baseQuery, _b = _a === void 0 ? {} : _a, _c = _b.query, baseQueryQuery = _c === void 0 ? null : _c, _d = _b.variables, baseQueryVariables = _d === void 0 ? {} : _d, _e = options.subscriptionQuery, _f = _e === void 0 ? {} : _e, _g = _f.query, subscriptionQueryQuery = _g === void 0 ? null : _g, _h = _f.variables, subscriptionQueryVariables = _h === void 0 ? {} : _h, _j = options.deltaQuery, _k = _j === void 0 ? {} : _j, _l = _k.query, deltaQueryQuery = _l === void 0 ? null : _l, _m = _k.variables, deltaQueryVariables = _m === void 0 ? {} : _m;\n    var baseQuery = baseQueryQuery ? {\n        query: graphql_1.print(baseQueryQuery),\n        variables: baseQueryVariables,\n    } : {};\n    var subscriptionQuery = subscriptionQueryQuery ? {\n        query: graphql_1.print(subscriptionQueryQuery),\n        variables: subscriptionQueryVariables,\n    } : {};\n    var deltaQuery = deltaQueryQuery ? {\n        query: graphql_1.print(deltaQueryQuery),\n        variables: deltaQueryVariables,\n    } : {};\n    return utils_1.hash(JSON.stringify({\n        baseQuery: baseQuery,\n        subscriptionQuery: subscriptionQuery,\n        deltaQuery: deltaQuery,\n    }));\n};\n//#endregion\n//#region Redux\nvar effect = function (store, client, effect, _action, _offlineCallback, offlineStatusChangeObservable) { return __awaiter(void 0, void 0, void 0, function () {\n    var options, _a, baseQuery, subscriptionQuery, deltaQuery, observer, _b, callback, upperBoundTimeMS, hash, itemInHash, _c, lastSyncTimestamp, _d, baseLastSyncTimestamp, networkStatusSubscription, subscription, baseQueryTimeoutId, subscriptionProcessor, unsubscribeAll, enqueueAgain, handle, STOP_CACHE_RECORDING, recorderCacheWrites, cacheProxy, error_2, _e, _f, _g, idsMap_1, cacheSnapshot, enquededMutations, subsControlLogger_1, baseRefreshIntervalInSeconds, skipBaseQuery, query, update_1, variables, result_1, _h, cacheSnapshot_1, data, query, update_2, variables, result_2, dataStore_1, enqueuedActionsFilter_1, baseQueryTimeout, error_1;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                options = effect.options, _a = effect.options, baseQuery = _a.baseQuery, subscriptionQuery = _a.subscriptionQuery, deltaQuery = _a.deltaQuery, observer = effect.observer, _b = effect.callback, callback = _b === void 0 ? function () { } : _b;\n                if (!observer || typeof observer.next !== 'function' || observer.closed) {\n                    // If we don't have an observer, we complete this effect (this means the app was closed/opened and a completely \n                    // new deltaSync will happen)\n                    return [2 /*return*/];\n                }\n                upperBoundTimeMS = DEFAULT_UPPER_BOUND_TIME_MS;\n                hash = exports.hashForOptions(options);\n                itemInHash = store.getState()[offline_cache_1.METADATA_KEY][exports.DELTASYNC_KEY].metadata[hash];\n                _c = options.lastSyncTimestamp, lastSyncTimestamp = _c === void 0 ? itemInHash.lastSyncTimestamp : _c, _d = options.baseLastSyncTimestamp, baseLastSyncTimestamp = _d === void 0 ? itemInHash.baseLastSyncTimestamp : _d;\n                unsubscribeAll = function () {\n                    logger('Unsubscribing');\n                    if (networkStatusSubscription)\n                        networkStatusSubscription.unsubscribe();\n                    if (subscription)\n                        subscription.unsubscribe();\n                    if (baseQueryTimeoutId)\n                        clearTimeout(baseQueryTimeoutId);\n                    if (subscriptionProcessor)\n                        subscriptionProcessor.close();\n                };\n                enqueueAgain = function () {\n                    unsubscribeAll();\n                    logger('Re-queuing', { baseLastSyncTimestamp: baseLastSyncTimestamp, lastSyncTimestamp: lastSyncTimestamp });\n                    exports.boundEnqueueDeltaSync(store, __assign(__assign({}, options), { lastSyncTimestamp: lastSyncTimestamp, baseLastSyncTimestamp: baseLastSyncTimestamp }), observer, callback);\n                };\n                if (typeof callback === 'function') {\n                    handle = new apollo_link_1.Observable(function () { return function () { return unsubscribeAll(); }; }).subscribe({ next: function () { } });\n                    callback(handle);\n                }\n                networkStatusSubscription = new apollo_link_1.Observable(function (obs) {\n                    var handle = offlineStatusChangeObservable.subscribe({\n                        next: function (_a) {\n                            var online = _a.online;\n                            if (!online) {\n                                obs.next(null);\n                                obs.complete();\n                            }\n                        },\n                        complete: function () { return obs.complete(); },\n                    });\n                    return function () { return handle.unsubscribe(); };\n                }).subscribe({\n                    next: function () {\n                        enqueueAgain();\n                    }\n                });\n                STOP_CACHE_RECORDING = typeof Symbol !== 'undefined' ? Symbol('stopCacheRecording') : '@@stopCacheRecording';\n                recorderCacheWrites = [];\n                cacheProxy = new Proxy(client.cache, {\n                    get: function (target, name, receiver) {\n                        switch (name) {\n                            case 'write':\n                                return function (options) {\n                                    if (!receiver[STOP_CACHE_RECORDING]) {\n                                        recorderCacheWrites.push(options);\n                                    }\n                                    return target[name](options);\n                                };\n                        }\n                        return target[name];\n                    }\n                });\n                subscriptionProcessor = subscriptionMessagesProcessorCreator(cacheProxy, function (proxy, record) {\n                    var update = options.subscriptionQuery.update;\n                    if (typeof update === 'function') {\n                        update(proxy, record);\n                        client.queryManager.broadcastQueries();\n                    }\n                });\n                _j.label = 1;\n            case 1:\n                _j.trys.push([1, 8, , 9]);\n                _e = store.getState(), _f = offline_cache_1.METADATA_KEY, _g = _e[_f], idsMap_1 = _g.idsMap, cacheSnapshot = _g.snapshot.cache, enquededMutations = _e.offline.outbox;\n                subsControlLogger_1 = logger.extend('subsc-control');\n                return [4 /*yield*/, new Promise(function (resolve) {\n                        var _a;\n                        if (subscriptionQuery && subscriptionQuery.query) {\n                            var query = subscriptionQuery.query, variables = subscriptionQuery.variables;\n                            subscription = client.subscribe({\n                                query: query,\n                                variables: __assign(__assign({}, variables), (_a = {}, _a[retry_link_1.SKIP_RETRY_KEY] = true, _a[aws_appsync_subscription_link_1.CONTROL_EVENTS_KEY] = true, _a)),\n                            }).filter(function (data) {\n                                var _a = data.extensions, _b = _a === void 0 ? {} : _a, _c = _b.controlMsgType, controlMsgType = _c === void 0 ? undefined : _c, _d = _b.controlMsgInfo, controlMsgInfo = _d === void 0 ? undefined : _d;\n                                var isControlMsg = typeof controlMsgType !== 'undefined';\n                                if (controlMsgType) {\n                                    subsControlLogger_1(controlMsgType, controlMsgInfo);\n                                    if (controlMsgType === 'CONNECTED') {\n                                        resolve();\n                                    }\n                                }\n                                return !isControlMsg;\n                            }).subscribe({\n                                next: function (data) {\n                                    subscriptionProcessor.enqueue(data);\n                                },\n                                error: function (err) {\n                                    resolve();\n                                    error_2 = err;\n                                    unsubscribeAll();\n                                    if (apollo_utilities_1.graphQLResultHasError(err) || err.graphQLErrors) {\n                                        // send error to observable, unsubscribe all, do not enqueue\n                                        observer.error(err);\n                                        return;\n                                    }\n                                    enqueueAgain();\n                                }\n                            });\n                        }\n                        else {\n                            resolve();\n                        }\n                    })];\n            case 2:\n                _j.sent();\n                if (error_2) {\n                    throw error_2;\n                }\n                baseRefreshIntervalInSeconds = (baseQuery || { baseRefreshIntervalInSeconds: undefined }).baseRefreshIntervalInSeconds;\n                upperBoundTimeMS = baseRefreshIntervalInSeconds ? baseRefreshIntervalInSeconds * 1000 : DEFAULT_UPPER_BOUND_TIME_MS;\n                skipBaseQuery = !(baseQuery && baseQuery.query) || (baseLastSyncTimestamp\n                    ? Date.now() - baseLastSyncTimestamp < upperBoundTimeMS\n                    : itemInHash.baseLastSyncTimestamp && Date.now() - itemInHash.baseLastSyncTimestamp < upperBoundTimeMS);\n                if (!(baseQuery && baseQuery.query)) return [3 /*break*/, 5];\n                query = baseQuery.query, update_1 = baseQuery.update, variables = baseQuery.variables;\n                logger((skipBaseQuery ? 'Skipping' : 'Running') + \" base query\", { baseLastSyncTimestamp: baseLastSyncTimestamp, itemInHash: itemInHash });\n                if (!!skipBaseQuery) return [3 /*break*/, 4];\n                return [4 /*yield*/, client.query({\n                        fetchPolicy: 'no-cache',\n                        query: query,\n                        variables: variables,\n                    })];\n            case 3:\n                result_1 = _j.sent();\n                cacheProxy.writeQuery({ query: query, variables: variables, data: result_1.data });\n                if (typeof update_1 === 'function') {\n                    apollo_utilities_1.tryFunctionOrLogError(function () {\n                        update_1(cacheProxy, result_1);\n                    });\n                }\n                baseLastSyncTimestamp = Date.now() - BUFFER_MILLISECONDS;\n                boundUpdateLastSync(store, { hash: hash, baseLastSyncTimestamp: baseLastSyncTimestamp });\n                return [3 /*break*/, 5];\n            case 4:\n                try {\n                    if (enquededMutations.length === 1) {\n                        offline_link_1.boundSaveSnapshot(store, client.cache);\n                    }\n                    _h = offline_cache_1.METADATA_KEY, cacheSnapshot_1 = store.getState()[_h].snapshot.cache;\n                    data = cacheProxy.storeReader.readQueryFromStore({\n                        store: apollo_cache_inmemory_1.defaultNormalizedCacheFactory(cacheSnapshot_1),\n                        query: apollo_utilities_1.addTypenameToDocument(query),\n                        variables: variables,\n                    });\n                    cacheProxy.writeQuery({ query: query, variables: variables, data: data });\n                }\n                catch (error) {\n                    logger('Error reading/writting baseQuery from store', error);\n                }\n                _j.label = 5;\n            case 5:\n                //#endregion\n                //#region Delta query\n                if (deltaQuery && deltaQuery.query && !skipBaseQuery) {\n                    logger('Skipping deltaQuery');\n                }\n                if (!(deltaQuery && deltaQuery.query && skipBaseQuery)) return [3 /*break*/, 7];\n                query = deltaQuery.query, update_2 = deltaQuery.update, variables = deltaQuery.variables;\n                logger('Running deltaQuery', { lastSyncTimestamp: lastSyncTimestamp, baseLastSyncTimestamp: baseLastSyncTimestamp });\n                return [4 /*yield*/, client.query({\n                        fetchPolicy: 'no-cache',\n                        query: query,\n                        variables: __assign(__assign({}, variables), { lastSync: Math.floor((lastSyncTimestamp || baseLastSyncTimestamp) / 1000) || 0 }),\n                    })];\n            case 6:\n                result_2 = _j.sent();\n                if (typeof update_2 === 'function') {\n                    apollo_utilities_1.tryFunctionOrLogError(function () {\n                        update_2(cacheProxy, result_2);\n                    });\n                }\n                lastSyncTimestamp = Date.now() - BUFFER_MILLISECONDS;\n                boundUpdateLastSync(store, { hash: hash, lastSyncTimestamp: lastSyncTimestamp });\n                _j.label = 7;\n            case 7:\n                //#endregion\n                if (error_2) {\n                    throw error_2;\n                }\n                // process subscription messages\n                subscriptionProcessor.ready();\n                cacheProxy[STOP_CACHE_RECORDING] = true;\n                if (enquededMutations.length === 1) {\n                    offline_link_1.boundSaveSnapshot(store, client.cache);\n                }\n                else {\n                    // Restore from cache snapshot\n                    client.cache.restore(cacheSnapshot);\n                }\n                recorderCacheWrites.forEach(client.cache.write.bind(client.cache));\n                offline_link_1.boundSaveSnapshot(store, client.cache);\n                client.initQueryManager();\n                dataStore_1 = client.queryManager.dataStore;\n                enqueuedActionsFilter_1 = [offline_link_1.offlineEffectConfig.enqueueAction];\n                enquededMutations\n                    .filter(function (_a) {\n                    var type = _a.type;\n                    return enqueuedActionsFilter_1.indexOf(type) > -1;\n                })\n                    .forEach(function (_a) {\n                    var effect = _a.meta.offline.effect;\n                    var _b = effect, _c = _b.operation, _d = _c === void 0 ? {} : _c, _e = _d.variables, variables = _e === void 0 ? {} : _e, _f = _d.query, document = _f === void 0 ? null : _f, update = _b.update, origOptimisticResponse = _b.optimisticResponse;\n                    if (typeof update !== 'function') {\n                        return;\n                    }\n                    var optimisticResponse = offline_link_1.replaceUsingMap(__assign({}, origOptimisticResponse), idsMap_1);\n                    var result = { data: optimisticResponse };\n                    dataStore_1.markMutationResult({\n                        mutationId: null,\n                        result: result,\n                        document: document,\n                        variables: variables,\n                        updateQueries: {},\n                        update: update\n                    });\n                });\n                client.queryManager.broadcastQueries();\n                if (baseQuery && baseQuery.query) {\n                    baseQueryTimeout = Math.max(upperBoundTimeMS - (Date.now() - baseLastSyncTimestamp), MIN_UPPER_BOUND_TIME_MS);\n                    logger(\"Re-running in \" + baseQueryTimeout / 1000 / 60 + \" minutes\");\n                    baseQueryTimeoutId = global.setTimeout(function () { return enqueueAgain(); }, baseQueryTimeout);\n                }\n                return [3 /*break*/, 9];\n            case 8:\n                error_1 = _j.sent();\n                unsubscribeAll();\n                throw error_1;\n            case 9: return [2 /*return*/];\n        }\n    });\n}); };\nvar discard = function (_callback, error, action, retries) {\n    var effect = action.meta.offline.effect;\n    var observer = effect.observer;\n    if (observer && observer.error && !observer.closed) {\n        observer.error(error);\n    }\n    return true;\n};\nvar reducer = function () { return function (state, action) {\n    var _a;\n    switch (action.type) {\n        case actions.UPDATE_LASTSYNC:\n            logger(action.type, action.payload);\n            return lastSyncReducer(state, action);\n        case actions.ENQUEUE:\n            logger(action.type, action.meta.offline.effect.options);\n            return metadataReducer(state, action);\n        default:\n            var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = __assign({ metadata: {} }, state.deltaSync), _a));\n            return newState;\n    }\n}; };\nvar lastSyncReducer = function (state, action) {\n    var _a, _b;\n    var _c = action.payload, lastSyncTimestamp = _c.lastSyncTimestamp, hash = _c.hash, baseLastSyncTimestamp = _c.baseLastSyncTimestamp;\n    var _d = state[exports.DELTASYNC_KEY], metadata = _d.metadata, deltaSync = __rest(_d, [\"metadata\"]);\n    var _e = hash, hashMetadata = metadata[_e], otherHashes = __rest(metadata, [typeof _e === \"symbol\" ? _e : _e + \"\"]);\n    var newMetadata = {\n        baseLastSyncTimestamp: baseLastSyncTimestamp || hashMetadata.baseLastSyncTimestamp,\n        lastSyncTimestamp: lastSyncTimestamp,\n    };\n    var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = __assign(__assign({}, deltaSync), { metadata: __assign(__assign({}, otherHashes), (_b = {}, _b[hash] = newMetadata, _b)) }), _a));\n    return newState;\n};\nvar metadataReducer = function (state, action) {\n    var _a, _b;\n    var effect = action.meta.offline.effect;\n    var options = effect.options;\n    var metadata = state[exports.DELTASYNC_KEY].metadata;\n    var hash = exports.hashForOptions(options);\n    var hashMetadata = metadata[hash];\n    var _c = hashMetadata || {}, _d = _c.lastSyncTimestamp, lastSyncTimestamp = _d === void 0 ? options.lastSyncTimestamp : _d, _e = _c.baseLastSyncTimestamp, baseLastSyncTimestamp = _e === void 0 ? options.baseLastSyncTimestamp : _e;\n    var newMetadata = {\n        lastSyncTimestamp: lastSyncTimestamp,\n        baseLastSyncTimestamp: options.baseLastSyncTimestamp === null ? null : baseLastSyncTimestamp,\n    };\n    var newState = __assign(__assign({}, state), (_a = {}, _a[exports.DELTASYNC_KEY] = {\n        metadata: __assign(__assign({}, metadata), (_b = {}, _b[hash] = newMetadata, _b))\n    }, _a));\n    return newState;\n};\nexports.boundEnqueueDeltaSync = function (store, options, observer, callback) {\n    var effect = { options: options, observer: observer, callback: callback };\n    store.dispatch({\n        type: exports.offlineEffectConfig.enqueueAction,\n        meta: {\n            offline: {\n                effect: effect\n            },\n        }\n    });\n};\nvar boundUpdateLastSync = function (store, _a) {\n    var hash = _a.hash, lastSyncTimestamp = _a.lastSyncTimestamp, baseLastSyncTimestamp = _a.baseLastSyncTimestamp;\n    var action = {\n        type: actions.UPDATE_LASTSYNC,\n        payload: {\n            hash: hash,\n            lastSyncTimestamp: lastSyncTimestamp,\n            baseLastSyncTimestamp: baseLastSyncTimestamp,\n        }\n    };\n    store.dispatch(action);\n};\n//#endregion\n//#region Builder\nexports.buildSync = function (typename, options, idField) {\n    if (idField === void 0) { idField = 'id'; }\n    var baseQuery = options.baseQuery, subscriptionQuery = options.subscriptionQuery, deltaQuery = options.deltaQuery, _a = options.cacheUpdates, cacheUpdates = _a === void 0 ? function () { return []; } : _a;\n    var loggerHelper = logger.extend('helper');\n    var result = {\n        baseQuery: __assign(__assign({}, baseQuery), (baseQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                var opFieldName = utils_1.getOperationFieldName(baseQuery.query);\n                var _b = opFieldName, result = data[_b];\n                writeCacheUpdates(loggerHelper, cache, result, cacheUpdates);\n            }\n        })),\n        subscriptionQuery: __assign(__assign({}, subscriptionQuery), (subscriptionQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                updateBaseWithDelta(loggerHelper, baseQuery, subscriptionQuery, cache, data, cacheUpdates, typename, idField);\n            }\n        })),\n        deltaQuery: __assign(__assign({}, deltaQuery), (deltaQuery && {\n            update: function (cache, _a) {\n                var data = _a.data;\n                updateBaseWithDelta(loggerHelper, baseQuery, deltaQuery, cache, data, cacheUpdates, typename, idField);\n            }\n        })),\n    };\n    loggerHelper('buildSync options', result);\n    return result;\n};\nvar writeCacheUpdates = function (logger, cache, result, cacheUpdates) {\n    if (cacheUpdates === void 0) { cacheUpdates = function () { return []; }; }\n    var cacheUpdatesLogger = logger.extend('cacheUpdates');\n    cacheUpdatesLogger('writeCacheUpdates');\n    result.forEach(function (item) { return cacheUpdates(item).forEach(function (_a) {\n        var _b;\n        var query = _a.query, variables = _a.variables;\n        var opFieldName = utils_1.getOperationFieldName(query);\n        var data = (_b = {}, _b[opFieldName] = item, _b);\n        cacheUpdatesLogger(\"Writing \" + opFieldName, { variables: variables, data: data });\n        cache.writeQuery({ query: query, variables: variables, data: data });\n    }); });\n};\nvar deltaRecordsProcessor = function (logger, deltaOperationName, deltaRecords, baseResult, typename, idField) {\n    var opType = offline_1.getOpTypeFromOperationName(deltaOperationName);\n    logger({ deltaOperationName: deltaOperationName, opType: opType, deltaRecords: deltaRecords });\n    if (!deltaRecords.length) {\n        return baseResult;\n    }\n    var result = __spreadArrays(baseResult);\n    deltaRecords.forEach(function (deltaRecord) {\n        var incomingRecord = __assign(__assign({}, deltaRecord), { __typename: typename });\n        var isRemove = opType === offline_1.CacheOperationTypes.REMOVE || incomingRecord.aws_ds === 'DELETE';\n        var updater = offline_1.getUpdater(opType === offline_1.CacheOperationTypes.AUTO && !isRemove\n            ? offline_1.CacheOperationTypes.ADD\n            : (isRemove ? offline_1.CacheOperationTypes.REMOVE : opType), idField);\n        logger({ incomingRecord: incomingRecord, isRemove: isRemove });\n        result = updater(__spreadArrays(result), incomingRecord);\n    });\n    return result;\n};\nvar updateBaseWithDelta = function (logger, baseQuery, otherQuery, cache, data, cacheUpdates, typename, idField) {\n    var _a;\n    if (cacheUpdates === void 0) { cacheUpdates = function () { return []; }; }\n    if (idField === void 0) { idField = 'id'; }\n    var updateLogger = logger.extend('update');\n    var opDefinition = apollo_utilities_1.getMainDefinition(otherQuery.query);\n    var _b = opDefinition.selectionSet.selections[0], opName = _b.name.value, opAliasNode = _b.alias;\n    var _c = (opAliasNode || {}).value, opAlias = _c === void 0 ? null : _c;\n    var _d = opDefinition, kind = _d.kind, graphqlOperation = _d.operation;\n    var isSubscription = kind === 'OperationDefinition' && graphqlOperation === 'subscription';\n    var deltaOperationName = (isSubscription ? Object.keys(data) : [opAlias || opName])[0];\n    var _e = deltaOperationName, records = data[_e];\n    var deltaRecords = [].concat(records);\n    if (!baseQuery || !baseQuery.query) {\n        updateLogger('No baseQuery provided');\n    }\n    else {\n        var query = baseQuery.query, variables = baseQuery.variables;\n        var operationName = utils_1.getOperationFieldName(query);\n        var _f = operationName, baseResult = cache.readQuery({ query: query, variables: variables })[_f];\n        if (!Array.isArray(baseResult)) {\n            throw new Error('Result of baseQuery is not an array');\n        }\n        var result = deltaRecordsProcessor(updateLogger, deltaOperationName, deltaRecords, baseResult, typename, idField);\n        if (result !== baseResult) {\n            cache.writeQuery({ query: query, data: (_a = {}, _a[operationName] = result, _a) });\n        }\n    }\n    writeCacheUpdates(updateLogger, cache, deltaRecords, cacheUpdates);\n};\n//#endregion\nexports.offlineEffectConfig = {\n    enqueueAction: actions.ENQUEUE,\n    effect: effect,\n    discard: discard,\n    reducer: reducer,\n};\n"},"lineCount":560}},"error":null,"hash":"96b71762ae606d1b7eda914b16b8de4b","cacheData":{"env":{}}}