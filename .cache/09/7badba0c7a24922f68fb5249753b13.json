{"id":"../node_modules/@aws-sdk/smithy-client/build/date-utils.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588363055010},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1588306092102}],"generated":{"js":"\"use strict\";\n/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Build indexes outside so we allocate them once.\nvar days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    var year = date.getUTCFullYear();\n    var month = date.getUTCMonth();\n    var dayOfWeek = date.getUTCDay();\n    var dayOfMonthInt = date.getUTCDate();\n    var hoursInt = date.getUTCHours();\n    var minutesInt = date.getUTCMinutes();\n    var secondsInt = date.getUTCSeconds();\n    // Build 0 prefixed strings for contents that need to be\n    // two digits and where we get an integer back.\n    var dayOfMonthString = dayOfMonthInt < 10 ? \"0\" + dayOfMonthInt : \"\" + dayOfMonthInt;\n    var hoursString = hoursInt < 10 ? \"0\" + hoursInt : \"\" + hoursInt;\n    var minutesString = minutesInt < 10 ? \"0\" + minutesInt : \"\" + minutesInt;\n    var secondsString = secondsInt < 10 ? \"0\" + secondsInt : \"\" + secondsInt;\n    return days[dayOfWeek] + \", \" + dayOfMonthString + \" \" + months[month] + \" \" + year + \" \" + hoursString + \":\" + minutesString + \":\" + secondsString + \" GMT\";\n}\nexports.dateToUtcString = dateToUtcString;\n"},"sourceMaps":{"js":{"version":3,"file":"date-utils.js","sourceRoot":"","sources":["../src/date-utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;GAUG;;AAEH,kDAAkD;AAClD,IAAM,IAAI,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9E,IAAM,MAAM,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAEnH,SAAgB,eAAe,CAAC,IAAU;IACxC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IACnC,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACjC,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACnC,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACxC,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACpC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACxC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IAExC,wDAAwD;IACxD,+CAA+C;IAC/C,IAAM,gBAAgB,GAAG,aAAa,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,aAAe,CAAC,CAAC,CAAC,KAAG,aAAe,CAAC;IACvF,IAAM,WAAW,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,QAAU,CAAC,CAAC,CAAC,KAAG,QAAU,CAAC;IACnE,IAAM,aAAa,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,UAAY,CAAC,CAAC,CAAC,KAAG,UAAY,CAAC;IAC3E,IAAM,aAAa,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,UAAY,CAAC,CAAC,CAAC,KAAG,UAAY,CAAC;IAE3E,OAAU,IAAI,CAAC,SAAS,CAAC,UAAK,gBAAgB,SAAI,MAAM,CAAC,KAAK,CAAC,SAAI,IAAI,SAAI,WAAW,SAAI,aAAa,SAAI,aAAa,SAAM,CAAC;AACjI,CAAC;AAjBD,0CAiBC","sourcesContent":["/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n * \n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n\n// Build indexes outside so we allocate them once.\nconst days: Array<String> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst months: Array<String> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport function dateToUtcString(date: Date): string {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n\n  return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n"]}},"error":null,"hash":"f5016bb8b87c6dd0f833395a14e0d08b","cacheData":{"env":{}}}