{"id":"../node_modules/@aws-sdk/smithy-client/build/client.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588355748633},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1588306092102},{"name":"@aws-sdk/middleware-stack","loc":{"line":3,"column":33},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/smithy-client/build/client.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/middleware-stack/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nvar Client = /** @class */ (function () {\n    function Client(config) {\n        this.middlewareStack = new middleware_stack_1.MiddlewareStack();\n        this.config = config;\n    }\n    Client.prototype.send = function (command, optionsOrCb, cb) {\n        var options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        var callback = typeof optionsOrCb === \"function\"\n            ? optionsOrCb\n            : cb;\n        var handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then(function (result) { return callback(null, result.output); }, function (err) { return callback(err); })\n                .catch(\n            // prevent any errors thrown in the callback from triggering an\n            // unhandled promise rejection\n            function () { });\n        }\n        else {\n            return handler(command).then(function (result) { return result.output; });\n        }\n    };\n    return Client;\n}());\nexports.Client = Client;\n"},"sourceMaps":{"js":{"version":3,"file":"client.js","sourceRoot":"","sources":["../src/client.ts"],"names":[],"mappings":";;AAAA,8DAA4D;AAiB5D;IAUE,gBAAY,MAAmC;QAFxC,oBAAe,GAAG,IAAI,kCAAe,EAA6B,CAAC;QAGxE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAgCD,qBAAI,GAAJ,UACE,OAMC,EACD,WAAsE,EACtE,EAA0C;QAE1C,IAAM,OAAO,GAAG,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5E,IAAM,QAAQ,GACZ,OAAO,WAAW,KAAK,UAAU;YAC/B,CAAC,CAAE,WAAqD;YACxD,CAAC,CAAC,EAAE,CAAC;QACT,IAAM,OAAO,GAAG,OAAO,CAAC,iBAAiB,CACvC,IAAI,CAAC,eAAsB,EAC3B,IAAI,CAAC,MAAM,EACX,OAAO,CACR,CAAC;QACF,IAAI,QAAQ,EAAE;YACZ,OAAO,CAAC,OAAO,CAAC;iBACb,IAAI,CACH,UAAA,MAAM,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAA7B,CAA6B,EACvC,UAAC,GAAQ,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,EAAb,CAAa,CAC5B;iBACA,KAAK;YACJ,+DAA+D;YAC/D,8BAA8B;YAC9B,cAAO,CAAC,CACT,CAAC;SACL;aAAM;YACL,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,EAAb,CAAa,CAAC,CAAC;SACvD;IACH,CAAC;IACH,aAAC;AAAD,CAAC,AAhFD,IAgFC;AAhFY,wBAAM","sourcesContent":["import { MiddlewareStack } from \"@aws-sdk/middleware-stack\";\nimport {\n  RequestHandler,\n  MetadataBearer,\n  Command,\n  Client as IClient\n} from \"@aws-sdk/types\";\n\nexport interface SmithyConfiguration<HandlerOptions> {\n  requestHandler: RequestHandler<any, any, HandlerOptions>;\n  readonly apiVersion: string;\n}\n\nexport type SmithyResolvedConfiguration<HandlerOptions> = SmithyConfiguration<\n  HandlerOptions\n>;\n\nexport class Client<\n  HandlerOptions,\n  ClientInput extends object,\n  ClientOutput extends MetadataBearer,\n  ResolvedClientConfiguration extends SmithyResolvedConfiguration<\n    HandlerOptions\n  >\n> implements IClient<ClientInput, ClientOutput, ResolvedClientConfiguration> {\n  public middlewareStack = new MiddlewareStack<ClientInput, ClientOutput>();\n  readonly config: ResolvedClientConfiguration;\n  constructor(config: ResolvedClientConfiguration) {\n    this.config = config;\n  }\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<\n      ClientInput,\n      InputType,\n      ClientOutput,\n      OutputType,\n      SmithyResolvedConfiguration<HandlerOptions>\n    >,\n    options?: HandlerOptions\n  ): Promise<OutputType>;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<\n      ClientInput,\n      InputType,\n      ClientOutput,\n      OutputType,\n      SmithyResolvedConfiguration<HandlerOptions>\n    >,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<\n      ClientInput,\n      InputType,\n      ClientOutput,\n      OutputType,\n      SmithyResolvedConfiguration<HandlerOptions>\n    >,\n    options: HandlerOptions,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<\n      ClientInput,\n      InputType,\n      ClientOutput,\n      OutputType,\n      SmithyResolvedConfiguration<HandlerOptions>\n    >,\n    optionsOrCb?: HandlerOptions | ((err: any, data?: OutputType) => void),\n    cb?: (err: any, data?: OutputType) => void\n  ): Promise<OutputType> | void {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    const callback =\n      typeof optionsOrCb === \"function\"\n        ? (optionsOrCb as (err: any, data?: OutputType) => void)\n        : cb;\n    const handler = command.resolveMiddleware(\n      this.middlewareStack as any,\n      this.config,\n      options\n    );\n    if (callback) {\n      handler(command)\n        .then(\n          result => callback(null, result.output),\n          (err: any) => callback(err)\n        )\n        .catch(\n          // prevent any errors thrown in the callback from triggering an\n          // unhandled promise rejection\n          () => {}\n        );\n    } else {\n      return handler(command).then(result => result.output);\n    }\n  }\n}\n"]}},"error":null,"hash":"0d06187ebd1bbbec84c083720e7c3066","cacheData":{"env":{}}}