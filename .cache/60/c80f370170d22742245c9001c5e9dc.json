{"id":"../node_modules/@aws-amplify/predictions/node_modules/@aws-sdk/util-utf8-node/build/index.js","dependencies":[{"name":"/Users/a/Desktop/buildopsTest/package.json","includedInParent":true,"mtime":1588279417247},{"name":"/Users/a/Desktop/buildopsTest/node_modules/@aws-amplify/predictions/node_modules/@aws-sdk/util-utf8-node/package.json","includedInParent":true,"mtime":1588279428049},{"name":"@aws-sdk/util-buffer-from","loc":{"line":3,"column":35},"parent":"/Users/a/Desktop/buildopsTest/node_modules/@aws-amplify/predictions/node_modules/@aws-sdk/util-utf8-node/build/index.js","resolved":"/Users/a/Desktop/buildopsTest/node_modules/@aws-sdk/util-buffer-from/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nfunction fromUtf8(input) {\n    const buf = util_buffer_from_1.fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n}\nexports.fromUtf8 = fromUtf8;\nfunction toUtf8(input) {\n    return util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n}\nexports.toUtf8 = toUtf8;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,gEAAwE;AAExE,SAAgB,QAAQ,CAAC,KAAa;IACpC,MAAM,GAAG,GAAG,6BAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAEtC,OAAO,IAAI,UAAU,CACnB,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,UAAU,EACd,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAC9C,CAAC;AACJ,CAAC;AARD,4BAQC;AAED,SAAgB,MAAM,CAAC,KAAiB;IACtC,OAAO,kCAAe,CACpB,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,UAAU,CACjB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrB,CAAC;AAND,wBAMC","sourcesContent":["import { fromArrayBuffer, fromString } from \"@aws-sdk/util-buffer-from\";\n\nexport function fromUtf8(input: string): Uint8Array {\n  const buf = fromString(input, \"utf8\");\n\n  return new Uint8Array(\n    buf.buffer,\n    buf.byteOffset,\n    buf.byteLength / Uint8Array.BYTES_PER_ELEMENT\n  );\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return fromArrayBuffer(\n    input.buffer,\n    input.byteOffset,\n    input.byteLength\n  ).toString(\"utf8\");\n}\n"]}},"error":null,"hash":"f1ba7120dcfe85c5b95f164b6abaf94e","cacheData":{"env":{}}}